# This is a sample workflow to help test contributions
# Change the branch name, url and token to fit with your own environment

# To run this locally with act use:
#     act workflow_dispatch -j local-test
#
# If you have permissions, you can run this workflow via the GitHub UI.
# Otherwise, use 'on: push' instead of 'on: workflow_dispatch'.

# Don't forget to revert the file changes and invalidate any tokens that were
# committed before opening a pull request.
on: workflow_dispatch

name: local-test

jobs:
  local-test:
    name: local-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
      with:
        node-version: '20.9.0'

    - name: NPM Install
      run: npm ci

    - name: NPM Build
      run: npm run build

    - name: Setup Vault
      run: node ./integrationTests/e2e/setup.js
      env:
        VAULT_HOST: localhost
        VAULT_PORT: 8200

    - name: Import Secrets
      id: import-secrets
      # use the local changes
      uses: ./
      # run against a specific version of vault-action
      # uses: hashicorp/vault-action@v2.1.2
      with:
        url: http://localhost:8200
        method: token
        token: testtoken
        secrets: |
          secret/data/test-json-string jsonString;
          secret/data/test-json-data jsonData;

    - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        github-token: "foobar"
        script: |
          const { JSONSTRING, JSONDATA } = process.env

          console.log(`string ${JSONSTRING}`)
          console.log(`data ${JSONDATA}`)
          const str = JSONDATA

          let valid = true
          try {
              JSON.parse(str)
          } catch (e) {
            valid = false
          }
          if (valid) {
            console.log("valid json")
          } else {
            console.log("not valid json")
          }
